<Controls:MetroWindow x:Class="Substation_Builder.View.OnelineView"
                        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:mah="http://metro.mahapps.com/winfx/xaml/shared"
                        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                        xmlns:Helpers="clr-namespace:Substation_Builder.Helpers"
                        xmlns:local1="clr-namespace:Substation_Builder.Pages.OnelineView"
                        xmlns:local2="clr-namespace:Substation_Builder.Model"
                        xmlns:local3="clr-namespace:Substation_Builder.Pages.DatabaseView"
                        mc:Ignorable="d"
                        Icon="..\Resources\Images\MainPageIcon.jpg"    
                        Title="One line" ResizeMode="CanResizeWithGrip"
                        WindowStartupLocation="CenterScreen"
                        x:Name="view"
                        BorderThickness="0" Height="720" Width="1050" MinWidth="1000" MinHeight="720" Background="{x:Null}">
    <Controls:MetroWindow.TitleTemplate>
        <DataTemplate>
            <TextBlock Text="{TemplateBinding Content}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" FontSize="22" Margin="20,0,0,0"/>
        </DataTemplate>
    </Controls:MetroWindow.TitleTemplate>
    <Controls:MetroWindow.Resources>
        <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="FontSize" Value="18"/>
        </Style>
        <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Background" Value="#2d2d2d"/>
        </Style>
        <Style TargetType="{x:Type Expander}">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Background" Value="#2d2d2d"/>
            <Setter Property="Opacity" Value="0.85"/>
            <Setter Property="Padding" Value="5,0,0,0"/>
        </Style>
        <Style TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Background" Value="#2d2d2d"/>
            <Setter Property="Opacity" Value="0.85"/>
            <Setter Property="Padding" Value="5,0,0,0"/>
        </Style>
        <Style TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Background" Value="#2d2d2d"/>
            <Setter Property="Opacity" Value="0.85"/>
            <Setter Property="Padding" Value="5,0,0,0"/>
        </Style>
        <Style TargetType="Control" x:Key="EmptyFocusVisualStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate/>
                </Setter.Value>
            </Setter>
        </Style>
        <Helpers:BindingProxy x:Key="DataContextProxy" Data="{Binding}"/>
        <!-- File menu -->
        <ContextMenu x:Key="ProjectContext">
            <MenuItem Header="New Project" Command="{Binding NewCommand}" CommandParameter="Project"/>
            <MenuItem Header="Open Project" Command="{Binding LoadCommand}" CommandParameter="{Binding}"/>
            <MenuItem Header="Save Project" Command="{Binding SaveCommand}" CommandParameter="Project"/>
            <MenuItem Header="Load Template" Command="{Binding TemplateCommand}" CommandParameter="Project"/>
        </ContextMenu>
        <!-- Breaker-->
        <ContextMenu x:Key="BreakerDiagram" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
            <MenuItem Header="Remove Breaker" Click="Remove_Click"/>
            <MenuItem Header="Show All CTs" Click="Show_All_CTs"/>
            <MenuItem Header="Hide All CTs" Click="Hide_All_CTs"/>
            <MenuItem Header="Open Breaker" Command="{Binding Data.OpenBreakerCommand, Source={StaticResource DataContextProxy}}" CommandParameter="{Binding}"/>
            <MenuItem Header="Close Breaker" Command="{Binding Data.CloseBreakerCommand, Source={StaticResource DataContextProxy}}" CommandParameter="{Binding}"/>
        </ContextMenu>
        <!-- Thevenin-->
        <ContextMenu x:Key="TheveninDiagram">
            <MenuItem Header="Remove Thevenin" Click="Remove_Click"/>
        </ContextMenu>
        <!-- Relay-->
        <ContextMenu x:Key="RelayDiagram">
            <MenuItem Header="Remove Relay" Click="Remove_Click"/>
        </ContextMenu>
        <!-- CTs-->
        <ContextMenu x:Key="CTDiagram">
            <MenuItem Header="Hide CT" Click="Remove_Click"/>
        </ContextMenu>
        <!-- Transformer-->
        <ContextMenu x:Key="TransformerDiagram">
            <MenuItem Header="Remove Transformer" Click="Remove_Click"/>
            <MenuItem Header="Show All CTs" Click="Show_All_CTs"/>
            <MenuItem Header="Hide All CTs" Click="Hide_All_CTs"/>
        </ContextMenu>
        <!-- Add Items -->
        <ContextMenu x:Key="AddTheveninContext" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
            <MenuItem Header="Add Thevenin" Command="{Binding Data.AddItemCommand, Source={StaticResource DataContextProxy}}" CommandParameter="Thevenin"/>
        </ContextMenu>
        <ContextMenu x:Key="AddTransformerContext" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
            <MenuItem Header="Add Transformer" Command="{Binding Data.AddItemCommand, Source={StaticResource DataContextProxy}}" CommandParameter="Transformer"/>
        </ContextMenu>
        <ContextMenu x:Key="AddRelayContext" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
            <MenuItem Header="Add Relay" Command="{Binding Data.AddItemCommand, Source={StaticResource DataContextProxy}}" CommandParameter="Relay"/>
        </ContextMenu>
        <ContextMenu x:Key="AddBreakerContext" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
            <MenuItem Header="Add Breaker" Command="{Binding Data.AddItemCommand, Source={StaticResource DataContextProxy}}" CommandParameter="Breaker"/>
        </ContextMenu>

        <!-- Remove Context Menu for Items in the control-->
        <!-- Incredibly evil as the contextmenu does not share the same datacontext as the treeview so the proxy is employed-->

        <!-- Remove Items -->
        <ContextMenu x:Key="RelayContext" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
            <MenuItem Header="Delete Relay" Command="{Binding Data.RemoveItemCommand, Source={StaticResource DataContextProxy}}" CommandParameter="{Binding}"/>
        </ContextMenu>
        <ContextMenu x:Key="CTContext" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
            <MenuItem Header="Delete CT" Command="{Binding Data.RemoveItemCommand, Source={StaticResource DataContextProxy}}" CommandParameter="{Binding}"/>
        </ContextMenu>
        <ContextMenu x:Key="TheveninContext" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
            <MenuItem Header="Delete Thevenin" Command="{Binding Data.RemoveItemCommand, Source={StaticResource DataContextProxy}}" CommandParameter="{Binding}"/>
        </ContextMenu>
        <ContextMenu x:Key="BreakerContext" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
            <MenuItem Header="Delete Breaker" Command="{Binding Data.RemoveItemCommand, Source={StaticResource DataContextProxy}}" CommandParameter="{Binding}"/>
            <MenuItem Header="Add CT" Command="{Binding Data.AddCTCommand, Source={StaticResource DataContextProxy}}" CommandParameter="{Binding}"/>
        </ContextMenu>
        <ContextMenu x:Key="XFMRContext" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
            <MenuItem Header="Delete XFMR" Command="{Binding Data.RemoveItemCommand, Source={StaticResource DataContextProxy}}" CommandParameter="{Binding}"/>
            <MenuItem Header="Add CT" Command="{Binding Data.AddCTCommand, Source={StaticResource DataContextProxy}}" CommandParameter="{Binding}"/>
        </ContextMenu>
    </Controls:MetroWindow.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="53"/>
            <ColumnDefinition Width="317"/>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="109*"/>
        </Grid.ColumnDefinitions>
        <ScrollViewer VerticalScrollBarVisibility="Visible" Grid.ColumnSpan="2">
            <StackPanel Margin="10" Background="Black">
                <Border ContextMenu="{DynamicResource ProjectContext}" PreviewMouseLeftButtonDown="UpdateProjectExpander" CornerRadius="2" Padding="5,0,5,5">
                    <Label Content="{Binding Project.SubData.Name,FallbackValue='[No Project Set]'}" Margin="0" BorderThickness="0"/>
                </Border>
                <!-- Treeview Expander -->
                <Expander Header="Substation Data" IsExpanded="True" PreviewMouseLeftButtonDown="Expander_PreviewMouseLeftButtonDown" >
                    <TreeView>
                        <!-- Thevenin Treeview-->
                        <TreeViewItem Header='Thevenins' ItemsSource="{Binding Project.Thevenins}" ContextMenu="{DynamicResource AddTheveninContext}">
                            <TreeViewItem.ItemTemplate>
                                <HierarchicalDataTemplate>
                                    <TextBlock Text="{Binding Name}" PreviewMouseLeftButtonDown="UpdateExpander" PreviewMouseRightButtonDown="UpdateContextMenu"/>
                                </HierarchicalDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <!-- Transformer Treeview-->
                        <TreeViewItem Header="Transformers" ItemsSource="{Binding Project.Transformers}" ContextMenu="{DynamicResource AddTransformerContext}" >
                            <TreeViewItem.ItemTemplate>
                                <HierarchicalDataTemplate ItemsSource="{Binding CTs}" >
                                    <TextBlock Text="{Binding Name}" PreviewMouseLeftButtonDown="UpdateExpander" PreviewMouseRightButtonDown="UpdateContextMenu"/>
                                </HierarchicalDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <!-- Breaker Treeview-->
                        <TreeViewItem Header="Breakers" ItemsSource="{Binding Project.Breakers}" ContextMenu="{DynamicResource AddBreakerContext}">
                            <TreeViewItem.ItemTemplate>
                                <HierarchicalDataTemplate ItemsSource="{Binding CTs}">
                                    <TextBlock Text="{Binding Name}" PreviewMouseLeftButtonDown="UpdateExpander" PreviewMouseRightButtonDown="UpdateContextMenu"/>
                                </HierarchicalDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                        <!-- Relay Treeview-->
                        <TreeViewItem Header='Relays' ItemsSource="{Binding Project.Relays}" ContextMenu="{DynamicResource AddRelayContext}">
                            <TreeViewItem.ItemTemplate>
                                <HierarchicalDataTemplate>
                                    <TextBlock Text="{Binding Name}" PreviewMouseLeftButtonDown="UpdateExpander" PreviewMouseRightButtonDown="UpdateContextMenu"/>
                                </HierarchicalDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>
                    </TreeView>
                </Expander>
                <!-- Displays the Forms from the selected Treeview Item -->
                <Expander x:Name="TreeviewExpander" Header="[Select an Element]" IsExpanded="True">
                    <Expander.Resources>
                        <DataTemplate DataType="{x:Type local2:SubstationData}">
                            <Viewbox StretchDirection="DownOnly">
                                <local3:SubstationPage/>
                            </Viewbox>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type local2:Thevenin}">
                            <Viewbox StretchDirection="DownOnly">
                                <local3:TheveninPage/>
                            </Viewbox>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type local2:Transformer}">
                            <Viewbox StretchDirection="DownOnly">
                                <local3:TransformerPage/>
                            </Viewbox>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type local2:Relay}">
                            <Viewbox StretchDirection="DownOnly">
                                <local3:RelayPage/>
                            </Viewbox>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type local2:Breaker}">
                            <Viewbox StretchDirection="DownOnly">
                                <local3:BreakerPage/>
                            </Viewbox>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type local2:CT}">
                            <Viewbox StretchDirection="DownOnly">
                                <local3:CTPage/>
                            </Viewbox>
                        </DataTemplate>
                    </Expander.Resources>
                </Expander>
                <!-- Displays the Options Form -->
                <Expander Header="Options">
                    <local1:ParametersEditor x:Name="parametersEditor"/>
                </Expander>
            </StackPanel>
        </ScrollViewer>
        <!-- The Display UI -->
        <Border Grid.Column="2" BorderThickness="2" CornerRadius="10" Margin="10" Padding="0" BorderBrush="#FF9C9595" DragOver="Border_DragOver" AllowDrop="True" PreviewMouseRightButtonDown="Border_PreviewMouseRightButtonDown" Grid.ColumnSpan="2">
            <Border.Background>
                <SolidColorBrush Color="Black" Opacity="0.4"/>
            </Border.Background>
            <Grid Margin="10" Grid.Row="0">
                <Grid.Resources>
                    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
                    <!-- This CompositeCollection basically Concatenates the Nodes and Connectors in a single one -->
                    <CompositeCollection x:Key="Col">
                        <CollectionContainer Collection="{Binding DataContext.Project.Breakers,Source={x:Reference view }}"/>
                        <CollectionContainer Collection="{Binding DataContext.Project.Thevenins,Source={x:Reference view}}"/>
                        <CollectionContainer Collection="{Binding DataContext.Project.Transformers,Source={x:Reference view}}"/>
                        <CollectionContainer Collection="{Binding DataContext.Project.Relays,Source={x:Reference view}}"/>
                    </CompositeCollection>
                    <!-- This is the DataTemplate that will be used to render the Breaker class -->
                    <DataTemplate DataType="{x:Type local2:Breaker}">
                        <Thumb DragDelta="Thumb_Drag" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                               ContextMenu="{Binding Mode=OneWay, Source={StaticResource BreakerDiagram}}" Visibility="{Binding Visibility}" PreviewMouseLeftButtonDown="Thumb_PreviewMouseLeftButtonDown">
                            <Thumb.Template>
                                <ControlTemplate TargetType="Thumb">
                                    <!-- visual of the breaker -->
                                    <DockPanel Margin="-25,-25,25,25" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Rectangle x:Name="Breaker" Fill="Red" Height="50" Width="50" Stroke="Black" StrokeThickness="3" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" OpacityMask="Black"/>
                                            <TextBlock x:Name="BreakerTxt" TextAlignment="Center" Text="{Binding Name}" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black" Visibility="Collapsed"/>
                                        </Grid>
                                        <!-- Display Coordinates for the item -->
                                        <StackPanel HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0">
                                            <TextBlock x:Name="XText" Text="{Binding X, StringFormat='{}X = {0}'}" IsHitTestVisible="False" HorizontalAlignment="Left" Visibility="Collapsed"/>
                                            <TextBlock x:Name="YText" Text="{Binding Y, StringFormat='{}Y = {0}'}" IsHitTestVisible="False" HorizontalAlignment="Left" Visibility="Collapsed"/>
                                        </StackPanel>
                                    </DockPanel>
                                    <!-- UI interactions -->
                                    <ControlTemplate.Triggers>
                                        <!-- Flashes selected item -->
                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="Flash">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="Breaker" Storyboard.TargetProperty="Opacity" From="1" To=".5" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <StopStoryboard BeginStoryboardName="Flash"/>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                        <!-- Change border thickness when dragging -->
                                        <Trigger Property="IsDragging" Value="True">
                                            <Setter TargetName="Breaker" Property="StrokeThickness" Value="5"/>
                                        </Trigger>
                                        <!-- Open / Close Breaker -->
                                        <DataTrigger Binding="{Binding BreakerOpen}" Value="True">
                                            <Setter TargetName="Breaker" Property="Fill" Value="Green"/>
                                        </DataTrigger>
                                        <!-- Show all names on displays -->
                                        <DataTrigger Binding="{Binding DataContext.Project.OnelinePref.ShowAllNames, ElementName=view}" Value="True">
                                            <Setter TargetName="BreakerTxt" Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <!-- Show selected name on display -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
                                                <Condition Binding="{Binding DataContext.Project.OnelinePref.ShowCurrentNames, ElementName=view}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter TargetName="BreakerTxt" Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                        <!-- Show all grid coordinates on display -->
                                        <DataTrigger Binding="{Binding DataContext.Project.OnelinePref.ShowAllCoordinates, ElementName=view}" Value="True">
                                            <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <!-- Show selected grid coordinates on display -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
                                                <Condition Binding="{Binding DataContext.Project.OnelinePref.ShowCurrentCoordinates, ElementName=view}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                                <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>
                    </DataTemplate>
                    <!-- This is the DataTemplate that will be used to render the Thevenin class -->
                    <DataTemplate DataType="{x:Type local2:Thevenin}">
                        <Thumb DragDelta="Thumb_Drag" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                               ContextMenu="{Binding Mode=OneWay, Source={StaticResource TheveninDiagram}}" Visibility="{Binding Visibility}" PreviewMouseLeftButtonDown="Thumb_PreviewMouseLeftButtonDown">
                            <Thumb.Template>
                                <ControlTemplate TargetType="Thumb">
                                    <!-- visual of the thevenin -->
                                    <DockPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Grid>
                                            <Ellipse x:Name="Thevenin" Fill="#FF00CD41" Stroke="Black" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Stretch" OpacityMask="Black" MinWidth="150"/>
                                            <TextBlock x:Name="TheveninTxt" TextAlignment="Center" Text="{Binding Name}" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black" Visibility="Collapsed" Margin="25,15"/>
                                        </Grid>
                                        <!-- Display Coordinates for the item -->
                                        <StackPanel HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0">
                                            <TextBlock x:Name="XText" Text="{Binding X, StringFormat='{}X = {0}'}" IsHitTestVisible="False" HorizontalAlignment="Left" Visibility="Collapsed"/>
                                            <TextBlock x:Name="YText" Text="{Binding Y, StringFormat='{}Y = {0}'}" IsHitTestVisible="False" HorizontalAlignment="Left" Visibility="Collapsed"/>
                                        </StackPanel>
                                    </DockPanel>
                                    <!-- UI interactions -->
                                    <ControlTemplate.Triggers>
                                        <!-- Flashes selected item -->
                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="Flash">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="Thevenin" Storyboard.TargetProperty="Opacity" From="1" To=".5" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <StopStoryboard BeginStoryboardName="Flash"/>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                        <!-- Change border thickness when dragging -->
                                        <Trigger Property="IsDragging" Value="True">
                                            <Setter TargetName="Thevenin" Property="StrokeThickness" Value="2"/>
                                        </Trigger>
                                        <!-- Show all names on displays -->
                                        <DataTrigger Binding="{Binding DataContext.Project.OnelinePref.ShowAllNames, ElementName=view}" Value="True">
                                            <Setter TargetName="TheveninTxt" Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <!-- Show selected name on display -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
                                                <Condition Binding="{Binding DataContext.Project.OnelinePref.ShowCurrentNames, ElementName=view}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter TargetName="TheveninTxt" Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                        <!-- Show all grid coordinates on display -->
                                        <DataTrigger Binding="{Binding DataContext.Project.OnelinePref.ShowAllCoordinates, ElementName=view}" Value="True">
                                            <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <!-- Show selected grid coordinates on display -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
                                                <Condition Binding="{Binding DataContext.Project.OnelinePref.ShowCurrentCoordinates, ElementName=view}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                                <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>
                    </DataTemplate>
                    <!-- This is the DataTemplate that will be used to render the Transformer class -->
                    <DataTemplate DataType="{x:Type local2:Transformer}">
                        <Thumb DragDelta="Thumb_Drag" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="{Binding Visibility}" PreviewMouseLeftButtonDown="Thumb_PreviewMouseLeftButtonDown">
                            <Thumb.Template>
                                <ControlTemplate TargetType="Thumb">
                                    <!-- visual of the transformer -->
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <StackPanel>
                                            <Grid Grid.Row="0" Grid.Column="0">
                                                <Rectangle StrokeThickness="3" Width="4" Stroke="Black"/>
                                                <StackPanel>
                                                    <Grid>
                                                        <Ellipse Height="15" Width="15" Stroke="Black" StrokeThickness="3" Fill="Black"/>
                                                        <Ellipse x:Name="XFMR_X1" Height="15" Width="15" Stroke="Red" StrokeThickness="3" Fill="Red" Opacity="0"/>
                                                    </Grid>
                                                    <Grid x:Name="CT5" DataContext="{Binding CTs[4]}" Visibility="{Binding Visibility, FallbackValue=Collapsed}" ContextMenu="{Binding Mode=OneWay, Source={StaticResource CTDiagram}}" Margin="0,8">
                                                        <Rectangle x:Name="CT5rectangle" Height="20" Width="20" Fill="#FFBFBCBC" Stroke="Black" StrokeThickness="2"/>
                                                    </Grid>
                                                    <Grid x:Name="CT3" DataContext="{Binding CTs[2]}" Visibility="{Binding Visibility, FallbackValue=Collapsed}" ContextMenu="{Binding Mode=OneWay, Source={StaticResource CTDiagram}}" Margin="0,8">
                                                        <Rectangle x:Name="CT3rectangle" Height="20" Width="20" Fill="#FFBFBCBC" Stroke="Black" StrokeThickness="2"/>
                                                    </Grid>
                                                    <Grid x:Name="CT1" DataContext="{Binding CTs[0]}" Visibility="{Binding Visibility, FallbackValue=Collapsed}" ContextMenu="{Binding Mode=OneWay, Source={StaticResource CTDiagram}}" Margin="0,8">
                                                        <Rectangle x:Name="CT1rectangle" Height="20" Width="20" Fill="#FFBFBCBC" Stroke="Black" StrokeThickness="2"/>
                                                    </Grid>
                                                </StackPanel>
                                            </Grid>
                                            <!-- Transformer dwg -->
                                            <Grid x:Name="XFMR" Grid.Row="1" Grid.Column="0" ContextMenu="{Binding Mode=OneWay, Source={StaticResource TransformerDiagram}}">
                                                <Rectangle Fill="{x:Null}"/>
                                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                                    <Rectangle x:Name="Transformer" Width="100" Height="160" Stroke="Black" StrokeThickness="3" Fill="#FFBFBCBC"/>
                                                    <TextBlock Text="H1    H2    H3" FontSize="12" FontWeight="Bold" Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,0"/>
                                                    <TextBlock Text="X1    X2    X3" FontSize="12" FontWeight="Bold" Foreground="Black" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,10"/>
                                                </Grid>
                                                <Ellipse Height="60" Width="60" Stroke="Black" StrokeThickness="3" Margin="0,0,0,40" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Ellipse Height="60" Width="60" Stroke="Black" StrokeThickness="3" Margin="0,40,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Grid>
                                            <Grid Grid.Row="2" Grid.Column="0">
                                                <Rectangle StrokeThickness="3" Width="4" Stroke="Black"></Rectangle>
                                                <StackPanel>
                                                    <Grid x:Name="CT2" DataContext="{Binding CTs[1]}" Visibility="{Binding Visibility, FallbackValue=Collapsed}" ContextMenu="{Binding Mode=OneWay, Source={StaticResource CTDiagram}}" Margin="0,8">
                                                        <Rectangle x:Name="CT2rectangle" Height="20" Width="20" Fill="#FFBFBCBC" Stroke="Black" StrokeThickness="2"/>
                                                    </Grid>
                                                    <Grid x:Name="CT4" DataContext="{Binding CTs[3]}" Visibility="{Binding Visibility, FallbackValue=Collapsed}" ContextMenu="{Binding Mode=OneWay, Source={StaticResource CTDiagram}}" Margin="0,8">
                                                        <Rectangle x:Name="CT4rectangle" Height="20" Width="20" Fill="#FFBFBCBC" Stroke="Black" StrokeThickness="2"/>
                                                    </Grid>
                                                    <Grid x:Name="CT6" DataContext="{Binding CTs[5]}" Visibility="{Binding Visibility, FallbackValue=Collapsed}" ContextMenu="{Binding Mode=OneWay, Source={StaticResource CTDiagram}}" Margin="0,8">
                                                        <Rectangle x:Name="CT6rectangle" Height="20" Width="20" Fill="#FFBFBCBC" Stroke="Black" StrokeThickness="2"/>
                                                    </Grid>
                                                    <Grid>
                                                        <Ellipse Height="15" Width="15" Stroke="Black" StrokeThickness="3" Margin="0" Fill="Black"/>
                                                        <Ellipse x:Name="XFMR_H1" Height="15" Width="15" Stroke="Red" StrokeThickness="3" Margin="0" Fill="Red" Opacity="0"/>
                                                    </Grid>
                                                </StackPanel>
                                            </Grid>
                                        </StackPanel>
                                        <!-- Display Coordinates for the item -->
                                        <StackPanel Grid.RowSpan="3" Grid.Column="1" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left">
                                            <TextBlock x:Name="XText" Text="{Binding X, StringFormat='{}X = {0}'}" IsHitTestVisible="False" HorizontalAlignment="Left" Visibility="Collapsed"/>
                                            <TextBlock x:Name="YText" Text="{Binding Y, StringFormat='{}Y = {0}'}" IsHitTestVisible="False" HorizontalAlignment="Left" Visibility="Collapsed"/>
                                        </StackPanel>
                                    </Grid>
                                    <!-- UI interactions -->
                                    <ControlTemplate.Triggers>
                                        <!-- Flashes Transformers when selected -->
                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="Flash">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="XFMR" Storyboard.TargetProperty="Opacity" From="1" To=".5" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <StopStoryboard BeginStoryboardName="Flash"/>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                        <!-- Flashes CT1 when selected -->
                                        <DataTrigger Binding="{Binding Tag, ElementName=TreeviewExpander}" Value="CT1">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="FlashCT1">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="CT1" Storyboard.TargetProperty="Opacity" From="1" To=".5" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <StopStoryboard BeginStoryboardName="FlashCT1"/>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                        <!-- Flashes CT2 when selected -->
                                        <DataTrigger Binding="{Binding Tag, ElementName=TreeviewExpander}" Value="CT2">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="FlashCT2">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="CT2" Storyboard.TargetProperty="Opacity" From="1" To=".5" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <StopStoryboard BeginStoryboardName="FlashCT2"/>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                        <!-- Flashes CT3 when selected -->
                                        <DataTrigger Binding="{Binding Tag, ElementName=TreeviewExpander}" Value="CT3">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="FlashCT3">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="CT3" Storyboard.TargetProperty="Opacity" From="1" To=".5" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <StopStoryboard BeginStoryboardName="FlashCT3"/>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                        <!-- Flashes CT4 when selected -->
                                        <DataTrigger Binding="{Binding Tag, ElementName=TreeviewExpander}" Value="CT4">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="FlashCT4">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="CT4" Storyboard.TargetProperty="Opacity" From="1" To=".5" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <StopStoryboard BeginStoryboardName="FlashCT4"/>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                        <!-- Flashes CT5 when selected -->
                                        <DataTrigger Binding="{Binding Tag, ElementName=TreeviewExpander}" Value="CT5">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="FlashCT5">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="CT5" Storyboard.TargetProperty="Opacity" From="1" To=".5" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <StopStoryboard BeginStoryboardName="FlashCT5"/>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                        <!-- Flashes CT6 when selected -->
                                        <DataTrigger Binding="{Binding Tag, ElementName=TreeviewExpander}" Value="CT6">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="FlashCT6">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="CT6" Storyboard.TargetProperty="Opacity" From="1" To=".5" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <StopStoryboard BeginStoryboardName="FlashCT6"/>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                        <!-- Change border thickness when dragging -->
                                        <Trigger Property="IsDragging" Value="True">
                                            <Setter TargetName="Transformer" Property="StrokeThickness" Value="5"/>
                                        </Trigger>
                                        <!-- Show all grid coordinates on display -->
                                        <DataTrigger Binding="{Binding DataContext.Project.OnelinePref.ShowAllCoordinates, ElementName=view}" Value="True">
                                            <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <!-- Show selected grid coordinates on display -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
                                                <Condition Binding="{Binding DataContext.Project.OnelinePref.ShowCurrentCoordinates, ElementName=view}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                                <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>
                    </DataTemplate>
                    <!-- This is the DataTemplate that will be used to render the Relay class -->
                    <DataTemplate DataType="{x:Type local2:Relay}">
                        <Thumb DragDelta="Thumb_Drag" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                               ContextMenu="{Binding Mode=OneWay, Source={StaticResource RelayDiagram}}" Visibility="{Binding Visibility}" PreviewMouseLeftButtonDown="Thumb_PreviewMouseLeftButtonDown">
                            <Thumb.Template>
                                <ControlTemplate TargetType="Thumb">
                                    <!-- visual of the relay -->
                                    <StackPanel Orientation="Horizontal">
                                        <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                            <Grid>
                                                <Rectangle x:Name="Relay" Fill="#FF435DD3" Stroke="Black" StrokeThickness="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinWidth="65"/>
                                                <TextBlock x:Name="RelayTxt" TextAlignment="Center" Text="{Binding Name}" Opacity=".85" FontWeight="Bold" Foreground="White" Margin="15,6"/>
                                            </Grid>
                                        </StackPanel>
                                        <!-- Display Coordinates for the item -->
                                        <StackPanel HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0">
                                            <TextBlock x:Name="XText" Text="{Binding X, StringFormat='{}X = {0}'}" IsHitTestVisible="False" HorizontalAlignment="Left" Visibility="Collapsed"/>
                                            <TextBlock x:Name="YText" Text="{Binding Y, StringFormat='{}Y = {0}'}" IsHitTestVisible="False" HorizontalAlignment="Left" Visibility="Collapsed"/>
                                        </StackPanel>
                                    </StackPanel>
                                    <!-- UI interactions -->
                                    <ControlTemplate.Triggers>
                                        <!-- Flashes selected item -->
                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="Flash">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="Relay" Storyboard.TargetProperty="Opacity" From="1" To=".5" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <StopStoryboard BeginStoryboardName="Flash"/>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                        <!-- Change border thickness when dragging -->
                                        <Trigger Property="IsDragging" Value="True">
                                            <Setter TargetName="Relay" Property="StrokeThickness" Value="2"/>
                                        </Trigger>
                                        <!-- Show all names on displays -->
                                        <DataTrigger Binding="{Binding DataContext.Project.OnelinePref.ShowAllNames, ElementName=view}" Value="True">
                                            <Setter TargetName="RelayTxt" Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <!-- Show selected name on display -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
                                                <Condition Binding="{Binding DataContext.Project.OnelinePref.ShowCurrentNames, ElementName=view}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter TargetName="RelayTxt" Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                        <!-- Show all grid coordinates on display -->
                                        <DataTrigger Binding="{Binding DataContext.Project.OnelinePref.ShowAllCoordinates, ElementName=view}" Value="True">
                                            <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <!-- Show selected grid coordinates on display -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
                                                <Condition Binding="{Binding DataContext.Project.OnelinePref.ShowCurrentCoordinates, ElementName=view}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                                <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>
                    </DataTemplate>
                </Grid.Resources>
                <ListBox 
                    x:Name="ListBoxUI"
                    DragOver="ListBoxUI_DragOver" 
                    Drop="ListBoxUI_Drop"
                    HorizontalAlignment="Center" VerticalAlignment="Center" PreviewMouseLeftButtonDown="ListBoxUI_PreviewMouseLeftButtonDown">
                    <!-- Zooms in and out of the canvas -->
                    <ListBox.LayoutTransform>
                        <ScaleTransform CenterX="0" CenterY="0" ScaleX="{Binding Project.OnelinePref.ZoomLevel}" ScaleY="{Binding Project.OnelinePref.ZoomLevel}"/>
                    </ListBox.LayoutTransform>
                    <ListBox.ItemsSource>
                        <StaticResource ResourceKey="Col"/>
                    </ListBox.ItemsSource>
                    <ListBox.Background>
                        <SolidColorBrush Color="#FF252525" Opacity="0.9"/>
                    </ListBox.Background>
                    <ListBox.Template>
                        <ControlTemplate>
                            <Border>
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" Opacity=".3">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="GhostWhite" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <!-- This Border serves as a background grid -->
                                <!-- The "Snapping" Actually occurs in the Items classes, it has nothing to do with any UI Elements -->
                                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                    <Border>
                                        <Border.Background>
                                            <VisualBrush TileMode="Tile" Viewport="0,0,25,25" ViewportUnits="Absolute" Viewbox="0,0,50,50" ViewboxUnits="Absolute">
                                                <VisualBrush.Visual>
                                                    <Rectangle Stroke="Darkgray" StrokeThickness="1" Height="50" Width="50" StrokeDashArray="5 3"/>
                                                </VisualBrush.Visual>
                                            </VisualBrush>
                                        </Border.Background>
                                        <ItemsPresenter/>
                                    </Border>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </ListBox.Template>
                    <!-- Sized the Display canvas-->
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas IsItemsHost="True" Background="#01FFFFFF" Height="{Binding Project.OnelinePref.AreaHeight}" Width="{Binding Project.OnelinePref.AreaWidth}" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Canvas.Left" Value="{Binding X}"/>
                            <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                            <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyFocusVisualStyle}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <ContentPresenter x:Name="Content"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </Grid>
        </Border>
    </Grid>
</Controls:MetroWindow>