<Controls:MetroWindow x:Class="Substation_Builder.View.OnelineView"
                        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:mah="http://metro.mahapps.com/winfx/xaml/shared"
                        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                        xmlns:Helpers="clr-namespace:Substation_Builder.Helpers"
                        xmlns:local1="clr-namespace:Substation_Builder.Pages.OnelineView"
                        xmlns:local2="clr-namespace:Substation_Builder.Model"
                        mc:Ignorable="d"
                        Icon="..\Resources\Images\MainPageIcon.jpg"    
                        Title="One line" ResizeMode="CanResizeWithGrip"
                        WindowStartupLocation="CenterScreen"
                        x:Name="view"
                        BorderThickness="0" Height="720" Width="1000" MinWidth="1000" MinHeight="720" Background="{x:Null}">

    <Controls:MetroWindow.TitleTemplate>
        <DataTemplate>
            <TextBlock Text="{TemplateBinding Content}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" FontSize="20px" Margin="20,0,0,0"/>
        </DataTemplate>
    </Controls:MetroWindow.TitleTemplate>

    <Controls:MetroWindow.Resources>
        <Style TargetType="Control" x:Key="EmptyFocusVisualStyle">
            <Setter Property="Template">
                <Setter.Value>
                    
                    <ControlTemplate/>
                </Setter.Value>
            </Setter>
        </Style>
    </Controls:MetroWindow.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="325"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Border Grid.Column="0" BorderThickness="2" CornerRadius="10" Margin="10,20,0,20" Padding="0" BorderBrush="#FF9C9595">
            <Border.Background>
                <SolidColorBrush Color="Black" Opacity="0.4"/>
            </Border.Background>
            <ScrollViewer>
            <StackPanel Margin="10,0,0,0">
                <Grid>
                    <TreeView x:Name="OnelineTreeview" ItemsSource="{Binding Project}" FontSize="18" 
                              VerticalContentAlignment="Top" HorizontalContentAlignment="Left" Margin="10"
                              Background="{x:Null}" BorderBrush="{x:Null}" MouseMove="OnelineTreeview_MouseMove" AllowDrop="True">

                        <TreeViewItem Header='Thevenins' ItemsSource="{Binding Project.Thevenins}">
                            <TreeViewItem.ItemTemplate>
                                <HierarchicalDataTemplate>
                                    <TextBlock Text="{Binding Name}"/>
                                </HierarchicalDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>

                        <TreeViewItem Header='Transformers' ItemsSource="{Binding Project.Transformers}">
                            <TreeViewItem.ItemTemplate>
                                <HierarchicalDataTemplate>
                                    <TextBlock Text="{Binding Name}"/>
                                </HierarchicalDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>

                        <TreeViewItem Header='Breakers' ItemsSource="{Binding Project.Breakers}">
                            <TreeViewItem.ItemTemplate>
                                <HierarchicalDataTemplate>
                                    <TextBlock Text="{Binding Name}"/>
                                </HierarchicalDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>

                        <TreeViewItem Header='Relays' ItemsSource="{Binding Project.Relays}">
                            <TreeViewItem.ItemTemplate>
                                <HierarchicalDataTemplate>
                                    <TextBlock Text="{Binding Name}"/>
                                </HierarchicalDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>

                        <TreeViewItem Header='Buses' ItemsSource="{Binding Project.Buses}">
                            <TreeViewItem.ItemTemplate>
                                <HierarchicalDataTemplate>
                                    <TextBlock Text="{Binding Name}"/>
                                </HierarchicalDataTemplate>
                            </TreeViewItem.ItemTemplate>
                        </TreeViewItem>

                    </TreeView>
                </Grid>

                <StackPanel Margin="0">
                    <local1:ButtonsPanel/>
                    <Expander Margin="10" Content="{Binding SelectedObject}"
                      Header="{Binding SelectedObject.Name,FallbackValue='[Select an Element]'}" 
                      BorderThickness="1" BorderBrush="LightGray" FontWeight="Bold" IsExpanded="True">
                        <Expander.Resources>
                            <DataTemplate DataType="{x:Type local2:Node}">
                                <local1:NodePropertyEditor/>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type local2:Connector}">
                                <local1:ConnectorPropertyEditor/>
                            </DataTemplate>
                        </Expander.Resources>
                    </Expander>
                    <Expander Margin="10" Header="Options" IsExpanded="True"
                      BorderBrush="LightGray" BorderThickness="1">
                        <local1:ParametersEditor/>
                    </Expander>
                </StackPanel>
            </StackPanel>
            </ScrollViewer>
        </Border>



        <!-- The Display UI -->
        <Border Grid.Column="1" BorderThickness="2" CornerRadius="10" Margin="10,20" Padding="0" BorderBrush="#FF9C9595" DragOver="Border_DragOver" AllowDrop="True">
            <Border.Background>
                <SolidColorBrush Color="Black" Opacity="0.4"/>
            </Border.Background>

            <Grid Margin="10">
                <Grid.Resources>
                    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
                    <!-- This CompositeCollection basically Concatenates the Nodes and Connectors in a single one -->
                    <CompositeCollection x:Key="Col">
                        <CollectionContainer Collection="{Binding DataContext.Connectors,Source={x:Reference view}}"/>
                        <CollectionContainer Collection="{Binding DataContext.Nodes,Source={x:Reference view}}"/>
                    </CompositeCollection>

                    <!-- This is the DataTemplate that will be used to render the Breaker class -->
                    <DataTemplate DataType="{x:Type local2:Node}">
                        <Thumb DragDelta="Thumb_Drag" 
                           IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                            <Thumb.Template>
                                <ControlTemplate TargetType="Thumb">
                                    <DockPanel Margin="-20,-20,20,20">
                                        <Grid>
                                            <Rectangle Height="40" Width="40" Stroke="Black" StrokeThickness="1" Fill="Red" x:Name="Breaker" Stretch="Uniform" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" OpacityMask="Black"/>
                                            <TextBlock TextAlignment="Center" Text="{Binding Name}" FontWeight="Bold"
                                               IsHitTestVisible="False"
                                               Visibility="{Binding DataContext.ShowNames, 
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=Window},
                                                                    Converter={StaticResource BoolToVisibilityConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black"/>
                                        </Grid>
                                        <StackPanel HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0">
                                            <TextBlock Text="{Binding X, StringFormat='{}X = {0}'}" IsHitTestVisible="False" Visibility="Collapsed" x:Name="XText" HorizontalAlignment="Left"/>
                                            <TextBlock Text="{Binding Y, StringFormat='{}Y = {0}'}" IsHitTestVisible="False" Visibility="Collapsed" x:Name="YText" HorizontalAlignment="Left"/>
                                        </StackPanel>
                                    </DockPanel>

                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="DashAnimation">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="Breaker" Storyboard.TargetProperty="Opacity" From="1" To=".5" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <StopStoryboard BeginStoryboardName="DashAnimation"/>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                        <Trigger Property="IsDragging" Value="True">
                                            <Setter TargetName="Breaker" Property="StrokeThickness" Value="3"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding DataContext.ShowAllCoordinates, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="True">
                                            <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                                            <Setter TargetName="Breaker" Property="StrokeThickness" Value="2"/>
                                            <Setter TargetName="Breaker" Property="Stroke" Value="Red"/>
                                            <Setter TargetName="Breaker" Property="Fill" Value="White"/>
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
                                                <Condition Binding="{Binding DataContext.ShowCurrentCoordinates, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="XText" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="YText" Property="Visibility" Value="Visible"/>
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>
                    </DataTemplate>

                    <!-- This is the DataTemplate that will be used to render the Connector class -->
                    <DataTemplate DataType="{x:Type local2:Connector}">
                        <Line Stroke="Blue" StrokeThickness="3"
                            X1="{Binding Start.X}" Y1="{Binding Start.Y}"
                            X2="{Binding End.X}" Y2="{Binding End.Y}" x:Name="Line"/>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding End}" Value="{x:Null}">
                                <Setter TargetName="Line" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                <Setter TargetName="Line" Property="Stroke" Value="Red"/>
                                <Setter TargetName="Line" Property="StrokeDashArray" Value="2 3"/>
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard x:Name="DashAnimation">
                                        <Storyboard Duration="00:00:01" RepeatBehavior="Forever">
                                            <DoubleAnimation From="0" To="25" Storyboard.TargetName="Line" Storyboard.TargetProperty="StrokeDashOffset"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="DashAnimation"/>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </Grid.Resources>

                <ListBox SelectedItem="{Binding SelectedObject}" 
                     PreviewMouseMove="ListBox_PreviewMouseMove"
                     PreviewMouseDown="ListBox_PreviewMouseDown" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="ListBoxUI" DragOver="ListBoxUI_DragOver" Drop="ListBoxUI_Drop">

                    <ListBox.LayoutTransform>
                        <ScaleTransform CenterX="0" CenterY="0" ScaleX="{Binding ZoomLevel}" ScaleY="{Binding ZoomLevel}"/>
                    </ListBox.LayoutTransform>
                    
                    <ListBox.Background>
                        <SolidColorBrush Color="#FF252525" Opacity="0.9"/>
                    </ListBox.Background>
                    <ListBox.Template>
                        <ControlTemplate>
                            <Border>
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" Opacity=".3">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="GhostWhite" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>

                                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                    <Border>
                                        <!-- This Border serves as a background and the VisualBrush used to paint its background serves as the "Snapping Grid" -->
                                        <!-- The "Snapping" Actually occurs in the Node class (see Node.X and Node.Y properties), it has nothing to do with any UI Elements -->
                                        <Border.Background>
                                            <VisualBrush TileMode="Tile"
                                        Viewport="0,0,25,25" ViewportUnits="Absolute" 
                                        Viewbox="0,0,50,50" ViewboxUnits="Absolute">
                                                <VisualBrush.Visual>
                                                    <Rectangle Stroke="Darkgray" StrokeThickness="1" Height="50" Width="50"
                                            StrokeDashArray="5 3"/>
                                                </VisualBrush.Visual>
                                            </VisualBrush>
                                        </Border.Background>
                                        <ItemsPresenter/>
                                    </Border>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </ListBox.Template>
                    <ListBox.ItemsSource>
                        <StaticResource ResourceKey="Col"/>
                    </ListBox.ItemsSource>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas IsItemsHost="True" Background="#01FFFFFF" 
                                Height="{Binding AreaHeight}" Width="{Binding AreaWidth}"
                                VerticalAlignment="Top" HorizontalAlignment="Left"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Canvas.Left" Value="{Binding X}"/>
                            <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                            <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyFocusVisualStyle}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <ContentPresenter x:Name="Content"/>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="Content" Property="Effect">
                                                    <Setter.Value>
                                                        <DropShadowEffect Color="Gray" ShadowDepth="4" BlurRadius="10"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <DataTrigger Binding="{Binding IsNew}" Value="True">
                                                <Setter Property="Opacity" Value=".5"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </Grid>
        </Border>

    </Grid>
</Controls:MetroWindow>
